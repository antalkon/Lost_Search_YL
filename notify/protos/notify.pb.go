// protos/notify.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: protos/notify.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KafkaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string            `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`                                                              // Уникальный ID запроса
	Service   string            `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`                                                                                   // Целевой сервис (notify)
	Action    string            `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`                                                                                     // Тип действия (email, push)
	Data      map[string]string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Данные запроса
}

func (x *KafkaRequest) Reset() {
	*x = KafkaRequest{}
	mi := &file_protos_notify_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KafkaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaRequest) ProtoMessage() {}

func (x *KafkaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notify_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaRequest.ProtoReflect.Descriptor instead.
func (*KafkaRequest) Descriptor() ([]byte, []int) {
	return file_protos_notify_proto_rawDescGZIP(), []int{0}
}

func (x *KafkaRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *KafkaRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *KafkaRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *KafkaRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type KafkaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string            `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`                                                              // id запроса, чтобы связать с исходным запросом
	Service   string            `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`                                                                                   // Сервис который обработал запрос
	Status    string            `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                                                                                     // Статус обработки (success, error)
	Message   string            `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                                                                                   // Описание результата
	Data      map[string]string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Результаты
}

func (x *KafkaResponse) Reset() {
	*x = KafkaResponse{}
	mi := &file_protos_notify_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KafkaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaResponse) ProtoMessage() {}

func (x *KafkaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_notify_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaResponse.ProtoReflect.Descriptor instead.
func (*KafkaResponse) Descriptor() ([]byte, []int) {
	return file_protos_notify_proto_rawDescGZIP(), []int{1}
}

func (x *KafkaResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *KafkaResponse) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *KafkaResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *KafkaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *KafkaResponse) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_protos_notify_proto protoreflect.FileDescriptor

var file_protos_notify_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0xcc, 0x01,
	0x0a, 0x0c, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe8, 0x01, 0x0a,
	0x0d, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_notify_proto_rawDescOnce sync.Once
	file_protos_notify_proto_rawDescData = file_protos_notify_proto_rawDesc
)

func file_protos_notify_proto_rawDescGZIP() []byte {
	file_protos_notify_proto_rawDescOnce.Do(func() {
		file_protos_notify_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_notify_proto_rawDescData)
	})
	return file_protos_notify_proto_rawDescData
}

var file_protos_notify_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protos_notify_proto_goTypes = []any{
	(*KafkaRequest)(nil),  // 0: protos.KafkaRequest
	(*KafkaResponse)(nil), // 1: protos.KafkaResponse
	nil,                   // 2: protos.KafkaRequest.DataEntry
	nil,                   // 3: protos.KafkaResponse.DataEntry
}
var file_protos_notify_proto_depIdxs = []int32{
	2, // 0: protos.KafkaRequest.data:type_name -> protos.KafkaRequest.DataEntry
	3, // 1: protos.KafkaResponse.data:type_name -> protos.KafkaResponse.DataEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_protos_notify_proto_init() }
func file_protos_notify_proto_init() {
	if File_protos_notify_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_notify_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_notify_proto_goTypes,
		DependencyIndexes: file_protos_notify_proto_depIdxs,
		MessageInfos:      file_protos_notify_proto_msgTypes,
	}.Build()
	File_protos_notify_proto = out.File
	file_protos_notify_proto_rawDesc = nil
	file_protos_notify_proto_goTypes = nil
	file_protos_notify_proto_depIdxs = nil
}
