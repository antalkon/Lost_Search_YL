services:
  gateway-service:
    build:
      context: .
    env_file:
      - .env
    environment:
      - REST_PORT=${REST_PORT}
      - KAFKA_PORT=${KAFKA_OUTSIDE_PORT}
      - PROMETHEUS_PORT=${PROMETHEUS_PORT}
    ports:
      - "${REST_PORT}:${REST_PORT}"
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    depends_on:
      kafka:
        condition: service_started
    networks:
      - default

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - default

  kafka:
    image: wurstmeister/kafka:latest
    env_file: .env
    environment:
      KAFKA_INSIDE_PORT: ${KAFKA_INSIDE_PORT}
      KAFKA_OUTSIDE_PORT: ${KAFKA_OUTSIDE_PORT}
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:${KAFKA_INSIDE_PORT},OUTSIDE://kafka:${KAFKA_OUTSIDE_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://kafka:${KAFKA_INSIDE_PORT},OUTSIDE://kafka:${KAFKA_OUTSIDE_PORT}
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default

  prometheus:
    image: quay.io/prometheus/prometheus:latest
    env_file:
      - .env
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    depends_on:
      gateway-service:
        condition: service_started
    networks:
      - default


  nginx:
    image: nginx
    container_name: nginx-container
    ports:
      - "80:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      gateway-service:
        condition: service_started
    networks:
      - default

networks:
  default: